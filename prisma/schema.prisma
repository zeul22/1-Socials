// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  fullname       String
  username       String
  emailaddress   String
  userType       UserType[]
  platform       Platform[]
  VideoContent   VideoContent? @relation(fields: [videoContentId], references: [id])
  videoContentId Int?
}

enum Role {
  None
  Editor
  Moderator
  Creator
}

model UserType {
  id     Int   @id @default(autoincrement())
  type   Role  @default(None)
  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

//  have to make auth_keys or User_keys storage for different platforms

enum PlatformName {
  None
  Youtube
  Instagram
  Twitter
  Linkedin
}

model Platform {
  id             Int           @id @default(autoincrement())
  name           PlatformName  @default(None)
  User           User?         @relation(fields: [userId], references: [id])
  userId         Int?
  VideoContent   VideoContent? @relation(fields: [videoContentId], references: [id])
  videoContentId Int?
}

model VideoContent {
  id        Int        @id @default(autoincrement())
  name      String
  platform  Platform[]
  user      User[]
  Schedule  Schedule[]
  storeLink String
}

model StaticContent {
  id        Int        @id @default(autoincrement())
  name      String
  video     String
  isAuth    Boolean    @default(false)
  Schedule  Schedule[]
  storeLink String
}

model Schedule {
  id               Int            @id @default(autoincrement())
  date             DateTime
  staticContent    StaticContent? @relation(fields: [staticContenttId], references: [id])
  staticContenttId Int?
  videoContent     VideoContent?  @relation(fields: [videoContentId], references: [id])
  videoContentId   Int?
}
